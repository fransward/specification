openapi: '3.0.3'
info:
  version: '4.0-DRAFT'
  title: Open Education API
  description: |
    OpenAPI (fka Swagger) specification for the Open Education API.

    # Hypermedia API
    The Open Education API is designed as a *hypermedia API*. In short, this means all responses will contain hypermedia links
    to simplify the navigation between the different API calls. Each link (except `self`) is optional. When a specific link is
    not provided, this could mean the relation does not exist or the targeted endpoint is not implemented. Each client is responsible
    for checking and handling the links correctly.

    # Error responses
    Error responses are formatted in the `problem+json` media type ([RFC7807](https://tools.ietf.org/html/rfc7807)):

    ```
    {
      "code": 404,
      "title": "Resource not found"
    }
    ```
  x-logo:
    url: logo.png
tags:
  - name: service metadata
    description: The service API provides additional metadata needed to make the OOAPI fit for this educational institution.
  - name: institution
    description: Information on the institution (of higher education) that is exposing this API.
  - name: persons
    description: The persons API provides information about persons related to an educational institute.
  - name: faculties
    description: The faculties API provides The organizational parts of an organization (faculty, cluser, domain, etc.) Types can be extended in the metadata service.
  - name: educational departments
    description: The educational departments API provides the organizational department that is responsible for the execution and recognition of courses.
  - name: educational plans
    description: The educational plans API provides a coherent set of educational components, that a person is currently working on or is planning on completing. Usually based on an educationalProgramme.
  - name: educational programmes
    description: The educational programmes API provides a coherent set of educational components, aimed at the realization of  competences or objectives in the field of knowledge, insight, attitudes and skills that the person who completes the program must have.
  - name: course groups
    description: The course groups API provides collection of educational components (either courses or courseGroups) that can be offered as a whole to a person.
  - name: courses
    description: The courses API provides a self-contained and formally structured learning experience. Aimed at providing learning outcomes to students. Usually placed in the context of an educationalProgramme.
  - name: course offerings
    description: The course offerings API provides an instance of a course which has a global timeframe, e.g. a period to which students can enroll and specific lecturers are assigned.
  - name: course results
    description: The course result API provides the aggregated result of a course based on the underlying test results by a student.
  - name: test results
    description: The test result API provides the result of executing a test activity.
  - name: buildings
    description: The building API provides a building that is currently used by the organization. Including all location details.
  - name: rooms
    description: The rooms API provides the part of a building where an activity can take place. Including detail information on the resources available, number of seats, etc. (Updated continuously)
  - name: schedules
    description: The schedules API provides the planned learning activity visible in a student view and a lecturer view. Schedules provide the answer to who, what, when, where, additional information for a learnign activity. (Updated on ad hoc-base)
  - name: news feeds
    description: The news feeds API provides An aggregation of news items regarding a specific theme. (Updated on ad hoc-base)
  - name: news items
    description: The news items API provides a message containing relevant information about an activity taking place a person or a resource. (Updated on ad hoc-base)
paths:
  /:
    $ref: paths/Service.yaml
  /institution:
    $ref: paths/Institution.yaml
  /persons:
    $ref: paths/PersonCollection.yaml
  /persons/{personId}:
    $ref: paths/PersonInstance.yaml
  /faculties:
    $ref: paths/FacultyCollection.yaml
  /faculties/{facultyId}:
    $ref: paths/FacultyInstance.yaml
  /educational-departments:
    $ref: paths/EducationalDepartmentCollection.yaml
  /educational-departments/{educationalDepartmentId}:
    $ref: paths/EducationalDepartmentInstance.yaml
  /educational-plans:
    $ref: paths/EducationalPlanCollection.yaml
  /educational-plans/{educationalPlanId}:
    $ref: paths/EducationalPlanInstance.yaml
  /educational-programmes:
    $ref: paths/EducationalProgrammeCollection.yaml
  /educational-programmes/{educationalProgrammeId}:
    $ref: paths/EducationalProgrammeInstance.yaml
  /course-groups:
    $ref: paths/CourseGroupCollection.yaml
  /course-groups/{courseGroupId}:
    $ref: paths/CourseGroupInstance.yaml
  /courses:
    $ref: paths/CourseCollection.yaml
  /courses/{courseId}:
    $ref: paths/CourseInstance.yaml
  /course-offerings:
    $ref: paths/CourseOfferingCollection.yaml
  /course-offerings/{courseOfferingId}:
    $ref: paths/CourseOfferingInstance.yaml
  /course-results:
    $ref: paths/CourseResultCollection.yaml
  /course-results/{courseResultId}:
    $ref: paths/CourseResultInstance.yaml
  /test-results:
    $ref: paths/TestResultCollection.yaml
  /test-results/{testResultId}:
    $ref: paths/TestResultInstance.yaml
  /buildings:
    $ref: paths/BuildingCollection.yaml
  /buildings/{buildingId}:
    $ref: paths/BuildingInstance.yaml
  /rooms:
    $ref: paths/RoomCollection.yaml
  /rooms/{roomId}:
    $ref: paths/RoomInstance.yaml
  /schedules:
    $ref: paths/ScheduleCollection.yaml
  /schedules/{scheduleId}:
    $ref: paths/ScheduleInstance.yaml
  /tests:
    $ref: paths/TestCollection.yaml
  /tests/{testId}:
    $ref: paths/TestInstance.yaml
  /news-feeds:
    $ref: paths/NewsFeedCollection.yaml
  /news-feeds/{newsFeedId}:
    $ref: paths/NewsFeedInstance.yaml
  /news-items:
    $ref: paths/NewsItemCollection.yaml
  /news-items/{newsItemId}:
    $ref: paths/NewsItemInstance.yaml
